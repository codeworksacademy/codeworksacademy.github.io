import{W as p,X as m,A as u,_,u as S,e as f,c as y,P as a,O as h,r as c,o as v,a as g,d as o,b as d}from"./index-cb18fa0e.js";import{i as w}from"./InstructorsService-1e866c4c.js";class A{async createEnrollment(t){const e=await p.post(`api/maintain/courses/${t.courseId}/enrollments`,t);m(u.myStudents,e.data)}}const C=new A,E={setup(){const n=S();async function t(){try{await w.getStudentsByCourseId(n.params.courseId)}catch(e){a.error(e)}}return f(()=>{t()}),{students:y(()=>u.myStudents),async addStudentToCourse(e,s){try{if(!await a.confirm(`Add ${e.name} to your course`))return;await C.createEnrollment({courseId:h.course.id,accountId:e.id}),s()}catch(r){a.error(r)}}}}},I={class:"student-enrollments"},b={class:"my-3 bg-page drop-3 p-3 rounded"},k=o("p",{class:"bold text-muted"},[o("small",null,"Add Student")],-1),x={class:"bg-page drop-3 rounded"};function B(n,t,e,s,r,L){const l=c("ProfileLookup"),i=c("StudentList");return v(),g("div",I,[o("div",b,[k,d(l,{onSelected:s.addStudentToCourse},null,8,["onSelected"])]),o("div",x,[d(i,{students:s.students},null,8,["students"])])])}const M=_(E,[["render",B]]);export{M as default};
